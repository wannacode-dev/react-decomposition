import '../../styles.css';
const { useState } = React;

function App() {
    const [activities, setActivities] = useState([
        { id: 1, type: 'login', text: '–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É', time: '–°–µ–≥–æ–¥–Ω—è, 10:30', icon: 'üîê', date: new Date() },
        { id: 2, type: 'edit', text: '–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', time: '–í—á–µ—Ä–∞, 15:45', icon: '‚úèÔ∏è', date: new Date(Date.now() - 24 * 60 * 60 * 1000) },
        { id: 3, type: 'upload', text: '–ó–∞–≥—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π —Ñ–∞–π–ª', time: '–í—á–µ—Ä–∞, 12:20', icon: 'üìÅ', date: new Date(Date.now() - 24 * 60 * 60 * 1000) },
        { id: 4, type: 'delete', text: '–£–¥–∞–ª–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç', time: '2 –¥–Ω—è –Ω–∞–∑–∞–¥, 09:15', icon: 'üóëÔ∏è', date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000) },
        { id: 5, type: 'create', text: '–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç', time: '3 –¥–Ω—è –Ω–∞–∑–∞–¥, 14:30', icon: 'üìù', date: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000) },
        { id: 6, type: 'share', text: '–ü–æ–¥–µ–ª–∏–ª–∏—Å—å —Ñ–∞–π–ª–æ–º —Å –∫–æ–ª–ª–µ–≥–∞–º–∏', time: '–ù–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥, 16:45', icon: 'üîó', date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) }
    ]);
    const [filter, setFilter] = useState('all');

    const getFilteredActivities = () => {
        const now = new Date();
        const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
        const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);

        switch (filter) {
            case 'today':
                return activities.filter(activity => activity.date >= today);
            case 'week':
                return activities.filter(activity => activity.date >= weekAgo);
            default:
                return activities;
        }
    };

    const filteredActivities = getFilteredActivities();

    const handleFilterChange = (e) => {
        setFilter(e.target.value);
    };

    return (
        <div className="activity-history">
            <div className="activity-header">
                <h3>–ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π ({filteredActivities.length})</h3>
                <select value={filter} onChange={handleFilterChange}>
                    <option value="all">–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è</option>
                    <option value="today">–ó–∞ —Å–µ–≥–æ–¥–Ω—è</option>
                    <option value="week">–ó–∞ –Ω–µ–¥–µ–ª—é</option>
                </select>
            </div>
            
            <div className="activity-list">
                {filteredActivities.length > 0 ? (
                    filteredActivities.map(activity => (
                        <div key={activity.id} className="activity-item">
                            <div className="activity-icon">{activity.icon}</div>
                            <div className="activity-content">
                                <p>{activity.text}</p>
                                <span className="activity-time">{activity.time}</span>
                            </div>
                        </div>
                    ))
                ) : (
                    <div className="no-activities">
                        <p>–î–µ–π—Å—Ç–≤–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                    </div>
                )}
            </div>
        </div>
    );
}

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);


